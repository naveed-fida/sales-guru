// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String 
  phone     String?
  area      Area?   @relation(fields: [areaId], references: [id], onDelete: SetNull)
  areaId    Int?
  orders    Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Area {
  id        Int      @id @default(autoincrement())
  name      String @unique
  customers Customer[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int      @id @default(autoincrement())
  name      String
  price     Float
  inventory Int
  productOrders OrderProduct[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id        Int      @id @default(autoincrement())
  customer  Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  customerId Int
  orderProducts OrderProduct[]
  amountReceived Int @default(0)
  discount       Int @default(0)
  amountDue      Int
  returned      Boolean @default(false)
  totalAmount    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Expense {
  id        Int      @id @default(autoincrement())
  description      String
  amount    Float
  date      DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderProduct {
  id        Int      @id @default(autoincrement())
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  quantity  Int
  pricePerUnit Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}